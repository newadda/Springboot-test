

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java'
    id 'java-library'
    id 'com.ewerk.gradle.plugins.querydsl' version "1.0.10" //querydsl 플러그인
    //id 'org.springframework.boot' version '2.2.1.RELEASE'
}


// In this section you declare where to find the dependencies of your project
repositories {

    maven {
        url "https://plugins.gradle.org/m2/"
    }

    jcenter()
    mavenCentral()

    maven {
        url "https://repo.boundlessgeo.com/main/"
    }


}


dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    // Json Paser
    // compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.0'
    
    // compile fileTree(dir: 'libs/hibernate/required', include: ['*.jar']) 
    
    
    
    //hibernate
    compile fileTree(dir: 'libs/hibernate/required', include: ['*.jar'])
    compile fileTree(dir: 'libs/hibernate/optional', include: ['*.jar'])
    compile fileTree(dir: 'libs/hibernate/optional/ehcache', include: ['*.jar'])
    compile fileTree(dir: 'libs/hibernate/optional/infinispan', include: ['*.jar'])
    compile fileTree(dir: 'libs/hibernate/optional/proxool', include: ['*.jar'])
    compile fileTree(dir: 'libs/hibernate/optional/c3p0', include: ['*.jar'])

    //compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.9.Final'
    //compile group: 'org.hibernate', name: 'hibernate-validator', version: '5.4.3.Final'
    compile group: 'org.hibernate', name: 'hibernate-spatial', version: '5.4.9.Final'

    
     //vibur
    compile group: 'com.googlecode.concurrentlinkedhashmap', name: 'concurrentlinkedhashmap-lru', version: '1.4.2'
    compile group: 'org.vibur', name: 'vibur-dbcp', version: '19.1'
    compile group: 'org.vibur', name: 'vibur-object-pool', version: '19.1'
    compile group: 'org.vibur', name: 'vibur-dbcp-hibernate5', version: '19.1'

    // Apache DBCP
    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.7.0'
    
    // mysql jdbc
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.43'
    
    // log
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.8.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.2'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.2'
    
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    compile group: 'org.slf4j', name: 'slf4j-ext', version: '1.7.25'


    // spring ORM, hibernate 와 spring 연동
    compile group: 'org.springframework', name: 'spring-orm', version: '5.0.9.RELEASE'
    // page 사요을 위해
    compile group: 'org.springframework.data', name: 'spring-data-jpa', version: '2.2.3.RELEASE'


    // QueryDSL
    compile group: 'com.querydsl', name: 'querydsl-jpa', version: '4.2.2'
    compile group: 'com.querydsl', name: 'querydsl-apt', version: '4.2.2'
    compile group: 'com.querydsl', name: 'querydsl-core', version: '4.2.2'
    compile group: 'com.querydsl', name: 'querydsl-sql', version: '4.2.2'
    compile group: 'com.querydsl', name: 'querydsl-sql-spatial', version: '4.2.2'
    compile group: 'com.querydsl', name: 'querydsl-sql-spring', version: '4.2.2'


}

compileJava.options.encoding = 'UTF-8'
version = '0.1'

// 프로젝트 성격에 따라 사용할 래퍼의 버전을 변경할 수 있도록 별로의 Task 작성
ext { gradleVersion= '2.1' //자신이 원하는 Gradle 버전에 맞춰 변경
 }


task wrapper(type: Wrapper) {
 gradleVersion = "$gradleVersion"
 }



// QueryDSL QClass 생성 gradle 5이상 설정, task other:compileQuerydsl 실행
def queryDslOutput = file("src-gen/main/java")

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa=true
    querydslSourcesDir = queryDslOutput

}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations{
    querydsl.extendsFrom compileClasspath
}

sourceSets {
    main {
        java {
            srcDir "src-gen/main/java"
        }
    }
}


/*
// QueryDSL QClass 생성 gradle 5이하 설정, task other:compileQuerydsl 실행
def queryDslOutput = file("src-gen/main/java")

sourceSets {
    main {
        java {
            srcDir "src-gen/main/java"
        }
    }
}

clean {
    delete queryDslOutput
}

task generateQueryDSL(type: JavaCompile, group: "build") {
    doFirst {
        if (!queryDslOutput.exists()) {
            logger.info("Creating `$queryDslOutput` directory")

            if (!queryDslOutput.mkdirs()) {
                throw new InvalidUserDataException("Unable to create `$queryDslOutput` directory")
            }
        }
    }

    source = sourceSets.main.java
    classpath = configurations.compile
    options.compilerArgs = [
            "-proc:only",
            "-processor",
            "com.querydsl.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = queryDslOutput
    options.failOnError = false
}

compileJava {
    dependsOn generateQueryDSL //이 부분 dependsOn이 generateQueryDSL이다.
    source generateQueryDSL.destinationDir
}
*/